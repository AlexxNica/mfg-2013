 
% File parsed with ufo2mf (UFO to Metafont) by Simon Egli and Walter Egli  %

% box dimension definition %

beginfontchar("l", (2.76*A_width + metapolation * (2.76*A_width - 2.76*B_width)) * width_l+ width_lR#, A_asc# + metapolation * (B_asc# - A_asc#), 0);
if known ps_output:
glyph_name "uni006C"; 
fi

 
% point coordinates font A

px3l := 0.98u ; py3l := 6.5u ;
px3r := 1.81u ; py3r := 6.5u ;
px2l := 0.98u ; py2l := 1.09u ;
px2r := 1.81u ; py2r := 1.09u ;
px1l := 1.57u ; py1l := 0.0u ;
px1r := 2.4u ; py1r := 0.0u ;

% reading mid points font A

.5(px3l + px3r) = x230;
.5(py3l + py3r) = y230;
.5(px2l + px2r) = x220;
.5(py2l + py2r) = y220;
.5(px1l + px1r) = x210;
.5(py1l + py1r) = y210;

% fake extra l an r for metafont

px3l = x3Bl; py3l = y3Bl; 
px3r = x3Br; py3r = y3Br; 
px2l = x2Bl; py2l = y2Bl; 
px2r = x2Br; py2r = y2Br; 
px1l = x1Bl; py1l = y1Bl; 
px1r = x1Br; py1r = y1Br; 

% pen width

dist3 := length (z3Bl-z3Br) ;
dist2 := length (z2Bl-z2Br) ;
dist1 := length (z1Bl-z1Br) ;
 
% point coordinates font B

ppx3l := 0.98u ; ppy3l := 6.5u ;
ppx3r := 1.81u ; ppy3r := 6.5u ;
ppx2l := 0.98u ; ppy2l := 1.09u ;
ppx2r := 1.81u ; ppy2r := 1.09u ;
ppx1l := 1.57u ; ppy1l := 0.0u ;
ppx1r := 2.4u ; ppy1r := 0.0u ;

% reading mid points font B

.5(ppx3l + ppx3r) = x23A;
.5(ppy3l + ppy3r) = y23A;
.5(ppx2l + ppx2r) = x22A;
.5(ppy2l + ppy2r) = y22A;
.5(ppx1l + ppx1r) = x21A;
.5(ppy1l + ppy1r) = y21A;

% fake extra l an r for font B

ppx3l = x3Cl; ppy3l = y3Cl; 
ppx3r = x3Cr; ppy3r = y3Cr; 
ppx2l = x2Cl; ppy2l = y2Cl; 
ppx2r = x2Cr; ppy2r = y2Cr; 
ppx1l = x1Cl; ppy1l = y1Cl; 
ppx1r = x1Cr; ppy1r = y1Cr; 

% pen width Font B

dist3B := length (z3Cl-z3Cr) ;
dist2B := length (z2Cl-z2Cr) ;
dist1B := length (z1Cl-z1Cr) ;

% pen angle Font A

ang3 := angle((z3Br + (metapolation * (z3Cr -z3Br))) - (z3Bl + (metapolation * (z3Cl -z3Bl))));
ang2 := angle((z2Br + (metapolation * (z2Cr -z2Br))) - (z2Bl + (metapolation * (z2Cl -z2Bl))));
ang1 := angle((z1Br + (metapolation * (z1Cr -z1Br))) - (z1Bl + (metapolation * (z1Cl -z1Bl))));


% test new vertical and horizontal option

ang1V := ang1; dist1V := dist1;
ang2V := ang2; dist2V := dist2;
ang3V := ang3; dist3V := dist3;


% test new penpos

penpos1(dist1 + (A_px + metapolation * (B_px - A_px)) + ((A_skeleton/50 + metapolation * (B_skeleton/50-A_skeleton/50)) * dist1), ang1);
penpos2(dist2 + (A_px + metapolation * (B_px - A_px)) + ((A_skeleton/50 + metapolation * (B_skeleton/50-A_skeleton/50)) * dist2), ang2);
penpos3(dist3 + (A_px + metapolation * (B_px - A_px)) + ((A_skeleton/50 + metapolation * (B_skeleton/50-A_skeleton/50)) * dist3), ang3);


% test new center (z) points

z1=((A_width + metapolation * (A_width - B_width)) * (x210 + metapolation * (x21A - x210) + width_lL) * width_l, (A_ascender + metapolation * (B_ascender - A_ascender))*(y210 + metapolation *(y21A - y210)));
z2=((A_width + metapolation * (A_width - B_width)) * (x220 + metapolation * (x22A - x220) + width_lL) * width_l, (A_ascender + metapolation * (B_ascender - A_ascender))*(y220 + metapolation *(y22A - y220)));
z3=((A_width + metapolation * (A_width - B_width)) * (x230 + metapolation * (x23A - x230) + width_lL) * width_l, (A_ascender + metapolation * (B_ascender - A_ascender))*(y230 + metapolation *(y23A - y230)));

% pen strokes % first built in:
penstroke 
z1e...
z2e...
z3e
;


% pen labels
penlabels(range 1 thru 99);
endchar;

